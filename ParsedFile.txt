A user-centric machine learning framework cyber security operations centerAbstract: To assure cyber security enterprise, typically SIEM (Security Information Event Management) system place normalize security events different preventive technologies flag alerts. Analysts security operation center (SOC) investigate alerts decide truly malicious not. However, generally number alerts overwhelming majority false positive exceeding SOC's capacity handle alerts. Because this, potential malicious attacks compromised hosts may missed. Machine learning viable approach reduce false positive rate improve productivity SOC analysts. In paper, develop user-centric machine learning framework cyber security operation center real enterprise environment. We discuss typical data sources SOC, work flow, leverage process data sets build effective machine learning system. The paper targeted towards two groups readers. The first group data scientists machine learning researchers cyber security domain knowledge want build machine learning systems security operations center. The second group audiences cyber security practitioners deep knowledge expertise cyber security, machine learning experiences wish build one themselves. Throughout paper, use system built Symantec SOC production environment example demonstrate complete steps data collection, label creation, feature engineering, machine learning algorithm selection, model performance evaluations, risk score generation.SECTION I.IntroductionCyber security incidents cause significant financial reputation impacts enterprise. In order detect malicious activities, SIEM (Security Information Event Management) system built companies government. The system correlates event logs endpoint, firewalls, IDS/IPS (Intrusion Detection/Prevention System), DLP (Data Loss Protection), DNS (Domain Name System), DHCP (Dynamic Host Configuration Protocol), Windows/Unix security events, VPN logs etc. The security events grouped different categories [1]. The logs terabytes data day.From security event logs, SOC (Security Operation Center) team develops so-called use cases pre-determined severity based analysts' experiences. They typically rule based correlating one indicators different logs. These rules network/host based time/frequency based.If pre-defined use case triggered, SIEM system generate alert real time. SOC analysts investigate alerts decide whether user related alert risky (a true positive) (false positive). If find alerts suspicious analysis, SOC analysts create OTRS (Open Source Ticket Request System) tickets. After initial investigation, certain OTRS tickets escalated tier 2 investigation system (e.g., Co3 System) severe security incidents investigation remediation Incident Response Team.However, SIEM typically generates lot alerts, high false positive rate. The number alerts per day hundreds thousands, much capacity SOC investigate them. Because this, SOC may choose investigate alerts high severity suppress type alerts. This could potentially miss severe attacks. Consequently, intelligent automatic system required identify risky users.The machine learning system sits middle SOC work flow, incorporates different event logs, SIEM alerts SOC analysis results generates comprehensive user risk score security operation center. Instead directly digging large amount SIEM alerts trying find needle haystack, SOC analysts use risk scores machine learning system prioritize investigations, starting users highest risks. This greatly improve efficiency, optimize job queue management, ultimately enhance enterprise's security.Specifically, approach constructs framework user-centric machine learning system evaluate user risk based alert information. This approach provide security analyst comprehensive risk score user security analyst focus users high risk scores.To best knowledge, previous research building complete systematic solution application. The main contribution naner follows: An advanced user-centric machine learning system proposed evaluated real industry data evaluate user risks. The system effectively reduce resources analyze alerts manually time enhance enterprise security.A novel data engineering process offered integrates alert information, security logs, SOC analysts' investigation notes generate features propagate labels machine learning models.SECTION II.Raw Data Data PreprocessingThe raw data collected Symantec internal security logs. It consists alerts SIEM system, notes analysts' investigation, logs different sources, including firewall, IDS/IPS, HTTP/FTP/DNS traffic, DHCP, vulnerability scanning, Windows security event, VPN on.For network traffic data data sources dynamic IP addresses, entity resolution required large enterprises, many internal IP addresses dynamically assigned users, causing IP addresses users change time. Without accurate dynamic IP user mapping, correlation activities different network logs challenging inaccurate. IP user mapping applied network traffic data make sure user ID appended primary key data summarization, data correlation feature engineering.Finally, analyst's investigation notes usually stored ticketing system free-form text. The notes typically include following information: reason alert triggered, supporting information internal system logs external resources (such VirusTotal IPVoid), investigation conclusion whether alert true positive not.SECTION III.User Feature Engineering Label GenerationA. Feature CreationThe features created individual user level main goal predict user's risk. We created 100 features describe user's behavior. The features include: summary features created statistical summaries (number alerts per day), temporal features generated time series analysis (event arrival rate), relational features derived social graph analysis (user centrality user-event graph), etc.B. Label Generation PropagationAfter features generated, need attach target “label” machine learning models. The initial labels created mining analyst's investigation notes. Text mining techniques, key word/topic extraction sentiment analysis, used extract user's actual state notes.From users annotations, generally (<2%) marked “risky” text mining. There two concerns use users machine learning: Majority users without annotations left model, may valuable informationMany machine learning models work well highly unbalanced classification problemIn order alleviate two issues, label propagation techniques needed derive labels. The main idea is, knowledge certain risky users, label users “similar” behaviors risky. The label propagation techniques used include: Matrix factorization-based clustering Supervised PU learning [2].Finally, combine labels text mining label propagation targets machine learning models. The final analytic dataset look like this: SECTION IV.Machine Learning Algorithms ImplementationsA. Machine Learning AlgorithmsIn system, tried several machine learning algorithms [3]–[4][5][6][7], including Multi-layer Neural Network (MNN) two hidden layers, Random Forest (RF) 100 Gini-split trees, Support Vector Machine (SVM) radial basis function kernel Logistic Regression (LR). In practice, find Multi-layer Neural Network Random Forest work pretty well problem. Some validation results models shown later.B. Model Performance MeasuresAs common practice, modeling data randomly split training testing sets different models evaluated test holdout data. Besides AUC also define two measures model goodness Equations   below:In contrast AUC evaluates model whole test data, detection rate lift reflect good model discovering risky users among different portions predictions. To calculate two metrics, results first sorted model scores (in case, probability user risky) descending order. Detection rate measures effectiveness classification model ratio results obtained without model. For example, suppose 60 risky users test data, top 10% predictions, model captures 30 risky users, detection rate equal 30/60=50%. Lift measures many times better use model contrast using model. Using example above, test data 5,000 users, lift equal (30/500)/(60/5000)=5. Higher lift implies better performance model certain predictions.C. Model Validation ResultsTo validate effectiveness machine learning system, take one month model running results calculate performance measures. We split data randomly training (75% samples) testing (remaining 25%) sets. The table lists different models' AUC test data. With average AUC value 0.80, Multi-layer Neural Network Random Forest achieves satisfying accuracy. Table III lists detection rates different models top 5% 20% predictions respectively. It promising Random Forest able detect 80% true risky cases 20% highest predictions. Finally, evaluate model lift also top 5% 20% predictions listed Table IV. For top 5% predictions, Multilayer Neural Network achieves lift value 6.82, meaning almost 7 times better current rule-based system. If look average lifts top 5% 20% predictions, Multilayer Neural Network highest average lift 5.5 listed last row Table V. This encouraging. D. Model Implementations Active LearningCurrently machine learning system implemented real enterprise production. The features labels updated daily historical data. Then machine learning model refreshed deployed scoring engine daily make sure captures latest patterns data. After that, risk scores generated real time new alerts triggered, SOC analysts take action right away high risk users. Finally, SOC analysts' notes collected fed back historical data future model refinement. The whole process streamlined automatically data integration score generation. The system also actively learns new insights generated analysts' investigations.SECTION V.Conclusions DiscussionsIn paper, present user-centric machine learning system leverages big data various security logs, alert information, analyst insights identification risky user. This system provides complete framework solution risky user detection enterprise security operation center. We describe briefly generate labels SOC investigation notes, correlate IP, host, users generate user-centric features, select machine learning algorithms evaluate performances, well machine learning system SOC production environment. We also demonstrate learning system able learn insights data highly unbalanced limited labels, even simple machine learning algorithms. The average lift top 20% predictions multi neural network model 5 times better current rule-based system. The whole machine learning system implemented production environment fully automated data acquisition, daily model refreshing, real time scoring, greatly improve SOC analyst's efficiency enhance enterprise risk detection management. As future work, research learning algorithms improve detection accuracy. 